<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>stata on Josh Errickson</title>
    <link>http://errickson.net/tags/stata/</link>
    <description>Recent content in stata on Josh Errickson</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Aug 2023 05:56:45 -0400</lastBuildDate><atom:link href="http://errickson.net/tags/stata/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Stopping `fill-paragraph` from breaking Stata inline dynamics tags</title>
      <link>http://errickson.net/posts/emacs-fill-paragraph-stata-dynamic-tags/</link>
      <pubDate>Tue, 22 Aug 2023 05:56:45 -0400</pubDate>
      
      <guid>http://errickson.net/posts/emacs-fill-paragraph-stata-dynamic-tags/</guid>
      <description>Stata inline dynamic tags contain spaces. E.g. &amp;lt;&amp;lt;dd_display: %9.3f abs(_b[2.rep78])&amp;gt;&amp;gt;. This means that when using fill-paragraph, the inline tag can be broken, which Stata&amp;rsquo;s dyndoc and dyntext commands will break on.
This snippet to include in your Emacs init file fixes this issue.
(defun my-in-dd-display () &amp;#34;Don&amp;#39;t break lines in Inline Stata Dynamic Tags.&amp;#34; (save-excursion (save-match-data (and (re-search-backward &amp;#34;&amp;gt;&amp;gt;\\|\\(&amp;lt;&amp;lt;dd_display:\\)&amp;#34; (line-beginning-position) t) (match-beginning 1))))) (add-hook &amp;#39;fill-nobreak-predicate #&amp;#39;my-in-dd-display) After defining the function with defun, the add-hook function is what enables it&amp;rsquo;s use with fill-paragraph.</description>
    </item>
    
    <item>
      <title>Move N= in Stata 18&#39;s `dtable`</title>
      <link>http://errickson.net/posts/stata18_dtable_move_samplesize/</link>
      <pubDate>Wed, 31 May 2023 09:46:01 -0400</pubDate>
      
      <guid>http://errickson.net/posts/stata18_dtable_move_samplesize/</guid>
      <description>By default, the dtable command places the sample size in its own row:
. sysuse auto, clear (1978 automobile data) . dtable mpg, by(foreign) ---------------------------------------------------------- Car origin Domestic Foreign Total ---------------------------------------------------------- N 52 (70.3%) 22 (29.7%) 74 (100.0%) Mileage (mpg) 19.827 (4.743) 24.773 (6.611) 21.297 (5.786) ---------------------------------------------------------- We can use the following two additional options to relocate it:
. dtable mpg, by(foreign) /// &amp;gt; sample(, statistics(freq) place(seplabels)) /// &amp;gt; sformat(&amp;#34;(N=%s)&amp;#34; frequency) ---------------------------------------------------------- Car origin Domestic Foreign Total (N=52) (N=22) (N=74) ---------------------------------------------------------- Mileage (mpg) 19.</description>
    </item>
    
    <item>
      <title>Category-wise comparisons in Stata 18&#39;s `dtable`</title>
      <link>http://errickson.net/posts/stata18_dtable_category_compare/</link>
      <pubDate>Thu, 04 May 2023 20:29:55 -0400</pubDate>
      
      <guid>http://errickson.net/posts/stata18_dtable_category_compare/</guid>
      <description>Stata 18&amp;rsquo;s new dtable is terrific for creating a &amp;ldquo;Table 1&amp;rdquo;, but by default if provided a categorical variable and asked to test for differences by group, it will provide a single Chi-sq test by default.
. sysuse auto, clear (1978 automobile data) . dtable i.rep78, by(foreign, tests) note: using test pearson across levels of foreign for rep78. ----------------------------------------------------------- Car origin Domestic Foreign Total Test ----------------------------------------------------------- N 52 (70.3%) 22 (29.</description>
    </item>
    
  </channel>
</rss>
