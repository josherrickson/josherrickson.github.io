[
["index.html", "Regression Modeling in Stata Chapter 1 Preface 1.1 How to use this document 1.2 Contact information 1.3 Usage", " Regression Modeling in Stata Josh Errickson 2019-05-03 Chapter 1 Preface 1.1 How to use this document These notes are published in bookdown format which enables easy creation of longform documents (using a mixture of markdown, R, and for these notes specifically, Stata’s dyndoc, which was added in Stata 15). The table of contents is found on the left hand side, with subsections expanding below the current section. At the top of the page are three icons, from left to right they 1) Hide/show the table of contents, 2) Search this document, and 3) Change the font the book is displayed in. All images should link to full-size versions to see detail if needed. 1.2 Contact information 1.2.1 CSCAR Office Hours: Monday-Friday 9am to 5pm (Closed Tuesday 12-1pm) Phone: 734.764.7828 Statistical Assistance: stats-consulting@umich.edu Data Science Assistance: ds-consulting@umich.edu High Performance Computing: hpc-consulting@umich.edu http://cscar.research.umich.edu/ 1.2.2 Author Josh Errickson 3550 Rackham Building 915 E. Washington Street Ann Arbor, MI 48109-1070 Email: jerrick@umich.edu 1.3 Usage This material was created for use in workshops and short courses presented by faculty and staff from the Consulting for Statistics, Computing &amp; Analytics Research (CSCAR) at the University of Michigan. No part of this material may be used for other purposes, copied, changed, or sold. "],
["ordinary-least-squares.html", "Chapter 2 Ordinary Least Squares 2.1 Terminology 2.2 Theory 2.3 Fitting the model 2.4 Including categorical predictors 2.5 Interactions 2.6 Robust standard errors 2.7 Assumptions 2.8 Variable Transformations 2.9 Miscellaneous concerns", " Chapter 2 Ordinary Least Squares Regression is a term for a wide range of very common statistical modeling designed to estimate the relationship between a set of variables. The nature of the variables and the hypothesized relationship between the variables affect which choice of regression is to be used. We will start with the most basic form of regression, linear regression. 2.1 Terminology When discussing any form of regression, we think of predicting the value of one variable1 based upon several other variables. The variable we are predicting can be called the “outcome”, the “response” or the “dependent variable”. The variables upon which we are predicting can be called “predictors”, “covariates”, or “independent variables”. The model we’re going to start discussing is called “linear regression”. You may also have heard this called “least squares regression” or “ordinary least squares (OLS)”. A lot of the time, if you see a reference to “regression” without specifying the type, they are referring to linear regression. 2.2 Theory Ordinary Least Squares regression is the most basic form of regression. This is suitable for situations where you have some number of predictor variables and the goal is to establish a linear equation which predicts a continuous outcome. Technically the outcome need not be continuous, but there are often better forms of regression to use for non-continuous outcomes. The term “linear equation” refers back to high school geometry and the equation for a line, \\[ y = mx + b \\] In that framing, the value of y can be obtained for a given value of x, based upon the slope (m) and intercept (b). You can easily extend this to higher dimensions, \\[ y = mx + nz + b \\] Now the value of y also depends on z and it’s slope (n). Linear regression fits a model based on this equation of a line: \\[ Y = \\beta_0 + \\beta_1X_1 + \\beta_2X_2 + \\cdots + \\beta_pX_p + \\epsilon \\] \\(Y\\) represents the outcome variable. \\(X_1, X_2, \\cdots, X_p\\) represent the predictors, of which there are \\(p\\) total. \\(\\beta_0\\) represents the intercept. \\(\\beta_0\\) represents the predicted average outcome when all \\(X_i\\) are 0. Often this will be nonsensical and ignored (e.g., if \\(X_1\\) is age, it usually makes no sense to estimate the outcome when age is 0). The other \\(\\beta\\)’s are called the coefficients, and represent the relationship (slope) between each predictor and the response. We will cover their interpretation in detail later. \\(\\epsilon\\) represents the error. Regression is a game of averages, but for any individual observation, the model will contain some error. For example, the relationship between the weight of a car (in lbs) and the length of a car (in inches) is approximately2: \\[ \\textrm{weight} = -3000 + 33*\\textrm{length} \\] The intercept is meaningless - how many 0 length cars do you know? If we plug in a reasonable value for length, say 200 inches, we can solve for weight: \\[ \\textrm{weight} = -3000 + 33*200 = 3600 \\] This is the predicted weight; for a given car of length 200, it won’t be exactly 3600 lbs, but that difference is error (\\(\\epsilon\\)). Stata can be used to estimate the regression coefficients in a model like the one above, and perform statistical tests of the null hypothesis that the coefficients are equal to zero (and thus that predictor variables are not important in explaining the response). Note that the response \\(Y\\) is modeled as a linear combination of the predictors and their coefficients. Some introductory statistical classes distinguish between simple regression (with only a single predictor) and multiple regression (with more than one predictor). While this is useful for developing the theory of regression, simple regression is not commonly used for real analysis, as it ignores one of the main benefits of regression, controlling for other predictors (to be discussed later). We will now fit a model, discussing assumptions afterwards, because almost all assumption checks can only occur once the model is fit! 2.3 Fitting the model For demonstration purposes, we’ll use the 2015 Residential Energy Consumption Survey (RECS). This is a public data-set made available by the governmental Energy Information Administration containing household level information about “energy characteristics on the housing unit, usage patterns, and household demographics”3. . import delimited https://www.eia.gov/consumption/residential/data/2015/csv/re &gt; cs2015_public_v3.csv (739 vars, 5,686 obs) Let’s fit a model predicting dollar expenditure on electricity (dollarel) based upon the square footage of the house (totsqft_en) and the gender of the respondent (hhsex). Before we fit the model, we want to briefly explore each variable involved. . summarize dollarel Variable | Obs Mean Std. Dev. Min Max -------------+--------------------------------------------------------- dollarel | 5,686 1403.779 817.4791 18.72 8121.56 . histogram dollarel (bin=37, start=18.719999, width=218.99568) We see here that expenditure on electricity ranges from under $ 20 to over $ 8000, though the vast majority seem to be between a few hundred dollars and $ 2000-3000. We will discuss a bit later approaches for dealing with right-skewed data. . summarize totsqft_en Variable | Obs Mean Std. Dev. Min Max -------------+--------------------------------------------------------- totsqft_en | 5,686 2081.444 1282.66 221 8501 . histogram totsqft_en (bin=37, start=221, width=223.78378) Looks very similar to dollarel. . tab hhsex HHSEX | Freq. Percent Cum. ------------+----------------------------------- 1 | 3,189 56.09 56.09 2 | 2,497 43.91 100.00 ------------+----------------------------------- Total | 5,686 100.00 For looking at the codebook online (Excel file here), we see that 1 is female and 2 is male. Let’s generate a new variable to make this distinction more clear . generate female = hhsex == 1 . tab female female | Freq. Percent Cum. ------------+----------------------------------- 0 | 2,497 43.91 43.91 1 | 3,189 56.09 100.00 ------------+----------------------------------- Total | 5,686 100.00 Now female will be a 1 if the respondent is female and 0 otherwise. Stata’s regress command fit the linear regression model. The general syntax is regress &lt;outcome&gt; &lt;predictors&gt; So we fit the model: . regress dollarel totsqft_en female Source | SS df MS Number of obs = 5,686 -------------+---------------------------------- F(2, 5683) = 510.07 Model | 578180814 2 289090407 Prob &gt; F = 0.0000 Residual | 3.2209e+09 5,683 566768.679 R-squared = 0.1522 -------------+---------------------------------- Adj R-squared = 0.1519 Total | 3.7991e+09 5,685 668272.157 Root MSE = 752.84 ------------------------------------------------------------------------------ dollarel | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] -------------+---------------------------------------------------------------- totsqft_en | .2488301 .0077982 31.91 0.000 .2335426 .2641175 female | 9.948149 20.15298 0.49 0.622 -29.55937 49.45567 _cons | 880.2739 22.64325 38.88 0.000 835.8845 924.6633 ------------------------------------------------------------------------------ There is a lot of important output here, so we will step through each piece. First, the top left table is the ANOVA table. If you were to fit a regression model with a single categorical predictor, this would be identical to running ANOVA via oneway. In general we don’t need to interpret anything here, as there are further measures of model fit in the regression frameworks. Next, the top right part has a series of measures. Regression performs complete case analysis - any observations missing any variable involved in this model is ignored in the model. (See multiple imputation for details on getting around this.) Check “Number of obs” to ensure the number of observations is what you expect. Here, the data has 5,686 rows, so the regression model is using all the data (there is no missingness in the variables involved in the model4. The F-test which follows (“F( 2, 5683)”5 and “Prob &gt; F”) is testing the null hypothesis that all coefficients are 0. In other words, if this test fails to reject, the conclusion is the model captures no relationships. In this case, do not continue interpreting the results; your conclusion is that there is no linear relationship. If this test does reject, you can continue interpreting. The \\(R^2\\) (“R-squared”) is a measure of model fit. It ranges from 0 to 1 and is a percentage, explaining what percent in the variation in the response is explained by the linear relationship with the predictors. What’s considered a “large” \\(R^2\\) depends greatly on your field and the situation, in very general terms, .6 is good and above .8 is great. However, if you know that there are a lot of unmeasured variables, a much smaller \\(R^2\\) can be considered good as well. The \\(R^2\\) of 0.15 is low, though it’s not so close to 0 as to be meaningless. Mathematically, adding a new predictor to the model will increase the \\(R^2\\), regardless of how useless the variable is.6 This makes \\(R^2\\) poor for model comparison, as it would always select the model with the most predictors. Instead, the adjusted \\(R^2\\) (“Adj R-Squared”) accounts for this; it penalizes the \\(R^2\\) by the number of predictors in the model. Use the \\(R^2\\) to measure model fit, use the adjusted \\(R^2\\) for model comparison. The root mean squared error (“Root MSE”, as known as RMSE) is a measure of the average difference between the observed outcome and the predicted outcome. It can be used an intuitive measure of model fit, as it is on the scale of the outcome variable. So for this example, the RMSE is 752.84 so on average, this model would mis-predict the electricity expenditure by about $ 752.84. Recall that we saw before that expenditure ranged to $ 8000, so an error of $ 752.84 is low, but not insignificant. Finally, we get to the coefficient table. Each row represents a single predictor. The “_cons” row is the intercept; it’s Coef. of 880.27 represents the average response when all other predictors are 0. Given that square-footage cannot be 0, this is meaningless and can be ignored. (Note that we cannot exclude the constant, we are simply ignoring it.) “Coef.”: These are the \\(\\beta\\) from the above model. We interpret each as “For a 1 increase in the value of the covariate with all other predictors held constant, we would predict this change in the response, on average.” For example, for every additional square foot in a house (while the gender of the respondent is constant), the respondent is predicted to have an average of $ 0.25 lower expenditure. It may make more sense to discuss this in terms of whole dollar changes; for every additional four square feet, we’d expect a $ 1 increase in expenditure. “Std. Err.”: This represents the error attached to the coefficient. This is rarely interpreted; but if it gets extremely large or extremely small (and the Coef. doesn’t likewise go to extremes), its an indication there may be something wrong. “t”: This is the standardized coefficient, calculated as Coef./Std. Err. We can’t directly compare the Coef.’s because of the different scales, but we can examine the standardized coefficients to get a sense of which predictor has a larger impact. In this model, we see that the impact of square footage is much more than the impact of gender. “P&gt;|t|”: The p-value testing whether the coefficient is significantly different than 0. We see that the p-value on square footage is low, so therefore we have evidence that the population coefficient is not zero - implying we’ve found a relationship between square footage and expenditure. On the other hand, the p-value for female is high, so cannot reject the possibility that the coefficient is zero and that there is no relationship. “[95% Conf. interval]”: A range of possible values. Whenever we look at any model, a distinction needs to be drawn between statistical significance and practical significance. While these two interpretations of significance often align, they are not guaranteed to. We often have statistical significance (a p-value less than .05) when there is no practical significance (aka clinical significance, a difference that isn’t scientifically interesting). This is mostly a function of sample size; with a large sample even very small effects can have small p-values. Alternatively, a large practical significance with a low statistical significance can occur with very noisy data or a small sample size, which might indicate further study with a larger sample is needed. In this example, the gender difference may qualify - the model is estimating that women respondents pay almost $ 10 more than men on average, however, this coefficient is not statistically distinguishable from 0. The confidence interval, ranging from -30 to 50, it extremely wide. It’s possible that there is a different between the genders of the respondent, but the estimate is small and noisy - and our sample size is not sufficient. All we can conclusively say is that we do not have enough evidence to claim there is a difference in gender. 2.4 Including categorical predictors Let’s say we want to add some location information to the model. There is a variable (regionc) that identifies which region (Northeast, Midwest, South, West) the respondent lives in. It’s reasonable to test whether the energy expenditures differs by region, regardless of the size of the home. Let’s naively add it to the model. . regress dollarel totsqft_en female regionc Source | SS df MS Number of obs = 5,686 -------------+---------------------------------- F(3, 5682) = 341.91 Model | 580955296 3 193651765 Prob &gt; F = 0.0000 Residual | 3.2182e+09 5,682 566380.134 R-squared = 0.1529 -------------+---------------------------------- Adj R-squared = 0.1525 Total | 3.7991e+09 5,685 668272.157 Root MSE = 752.58 ------------------------------------------------------------------------------ dollarel | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] -------------+---------------------------------------------------------------- totsqft_en | .2509478 .007854 31.95 0.000 .2355509 .2663448 female | 8.408302 20.15808 0.42 0.677 -31.10922 47.92583 regionc | 22.18367 10.02297 2.21 0.027 2.534824 41.83252 _cons | 815.4845 37.0037 22.04 0.000 742.9431 888.0258 ------------------------------------------------------------------------------ We only get a single coefficient. What is the interpretation of it? There is none. Stata is treating region as continuous. Regression models cannot use categorical predictors. Instead, the regression model requires a series a dummy variables (e.g. northwest - Is this respondent in the Northwest? south - Is this respondent in the South?) for which each respondent has a single positive (1) response and the remainder negative (0) responses. While we could create this ourselves7, something we’d likely have to do in a software like SPSS, but Stata (and most modern software) can handle this automatically. The issue is that Stata doesn’t know we want to treat regionc as categorical. If we prefix the variable name with i., Stata will know it is categorical. First, let’s look at the regions and add appropriate labels from the codebook. . tab regionc REGIONC | Freq. Percent Cum. ------------+----------------------------------- 1 | 794 13.96 13.96 2 | 1,327 23.34 37.30 3 | 2,010 35.35 72.65 4 | 1,555 27.35 100.00 ------------+----------------------------------- Total | 5,686 100.00 . label define region 1 &quot;Northeast&quot; 2 &quot;Midwest&quot; 3 &quot;South&quot; 4 &quot;West&quot; . label values regionc region . regress dollarel totsqft_en female i.regionc Source | SS df MS Number of obs = 5,686 -------------+---------------------------------- F(5, 5680) = 341.89 Model | 878884023 5 175776805 Prob &gt; F = 0.0000 Residual | 2.9202e+09 5,680 514127.323 R-squared = 0.2313 -------------+---------------------------------- Adj R-squared = 0.2307 Total | 3.7991e+09 5,685 668272.157 Root MSE = 717.03 ------------------------------------------------------------------------------ dollarel | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] -------------+---------------------------------------------------------------- totsqft_en | .2549572 .0074959 34.01 0.000 .2402624 .269652 female | -3.4598 19.21206 -0.18 0.857 -41.12277 34.20317 | regionc | Midwest | -217.8519 32.17695 -6.77 0.000 -280.931 -154.7728 South | 329.5928 30.1096 10.95 0.000 270.5665 388.6191 West | -127.7622 31.41033 -4.07 0.000 -189.3384 -66.18596 | _cons | 844.3121 32.41159 26.05 0.000 780.773 907.8512 ------------------------------------------------------------------------------ (Note: Older versions of Stata require prefacing the command with xi: before it would recognize the i., e.g. xi: regress dollarel totsqft_en female i.regionc. xi: was deprecated a number of years ago, but you may see this used in older code online or by users who do not stay up to date.) This model is improved, considering the Adjusted \\(R^2\\) values. The coefficient (and significance) on square footage is not really changed, but notice the magnitude of the coefficient on female has changed drastically. This implies that gender and region were correlated, and when we did not control for region, gender was including it’s effect. We will discuss multicollinearity later, as well as why this is one reason why model selection is bad. Now we see 3 rows for regionc, each corresponding to a comparison between region “Northeast” and the given row. When we include a categorical variable, one group is excluded as the baseline. By default, Stata removes the first group (here 1, Northeast). So we can see that the Midwest compared to the northeast has statistically significantly lower expenditure, with an average reduction of $ 217.85. Those in the South have higher average expenditure compared to Northeast, and those in the West have lower average expenditure. We do not see a comparison of, for example, South versus West. To see the other comparisons we can use the margins command. . margins regionc Predictive margins Number of obs = 5,686 Model VCE : OLS Expression : Linear prediction, predict() ------------------------------------------------------------------------------ | Delta-method | Margin Std. Err. t P&gt;|t| [95% Conf. Interval] -------------+---------------------------------------------------------------- regionc | Northeast | 1373.051 25.47904 53.89 0.000 1323.102 1422.999 Midwest | 1155.199 19.7725 58.42 0.000 1116.437 1193.96 South | 1702.643 16.00258 106.40 0.000 1671.272 1734.015 West | 1245.288 18.25815 68.20 0.000 1209.495 1281.081 ------------------------------------------------------------------------------ . margins regionc, pwcompare(pv) Pairwise comparisons of predictive margins Model VCE : OLS Expression : Linear prediction, predict() -------------------------------------------------------------- | Delta-method Unadjusted | Contrast Std. Err. t P&gt;|t| ----------------------+--------------------------------------- regionc | Midwest vs Northeast | -217.8519 32.17695 -6.77 0.000 South vs Northeast | 329.5928 30.1096 10.95 0.000 West vs Northeast | -127.7622 31.41033 -4.07 0.000 South vs Midwest | 547.4447 25.47192 21.49 0.000 West vs Midwest | 90.08974 27.02674 3.33 0.001 West vs South | -457.355 24.24899 -18.86 0.000 -------------------------------------------------------------- The first margins call, without any options, displays the marginal means for each category - if every respondent was from the given region, what is the average predicted expenditure. The t-test here is useless - it’s only testing that the average expenditure is non-zero. We see that the lowest average expenditure is in the Midwest, the highest in the South. The second margins call adds the pwcompare(pv) option, which performs pairwise test between each pair of regions. This is similar to a post-hoc test from ANOVA if you are familiar with it. All regions are statistically significant from each other. Notice that the three comparisons to Northwest are identical to the results in the regression output. By default, using i. makes the first level (lowest numerical value) as the reference category. You can adjust this by using ib#. instead, such as: . regress dollarel totsqft_en female ib2.regionc Source | SS df MS Number of obs = 5,686 -------------+---------------------------------- F(5, 5680) = 341.89 Model | 878884023 5 175776805 Prob &gt; F = 0.0000 Residual | 2.9202e+09 5,680 514127.323 R-squared = 0.2313 -------------+---------------------------------- Adj R-squared = 0.2307 Total | 3.7991e+09 5,685 668272.157 Root MSE = 717.03 ------------------------------------------------------------------------------ dollarel | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] -------------+---------------------------------------------------------------- totsqft_en | .2549572 .0074959 34.01 0.000 .2402624 .269652 female | -3.4598 19.21206 -0.18 0.857 -41.12277 34.20317 | regionc | Northeast | 217.8519 32.17695 6.77 0.000 154.7728 280.931 South | 547.4447 25.47192 21.49 0.000 497.51 597.3794 West | 90.08974 27.02674 3.33 0.001 37.10702 143.0725 | _cons | 626.4601 28.51125 21.97 0.000 570.5672 682.3531 ------------------------------------------------------------------------------ This does not fit a different model. Both models (with i.regionc and ib2.regionc) are identical, we’re just seeing slight variations. If the models do change (especially the model fit numbers in the top right), something has gone wrong. So what’s the point of this - well sometimes you only care about comparisons to a single baseline group. In that case, if you make that group the proper reference category, you don’t need to use margins. 2.5 Interactions Each coefficient we’ve look at so far is only testing whether there is a relationship between the predictor and response when the other predictors are held constant. What if we think the relationship changes based on the value of other predictors? For example, we might be interested in whether the relationship between square footage and expenditure differs by region. Mathematically an interaction is nothing more than a literal multiplication. For example, if our model has only two predictors, \\[ Y = \\beta_0 + \\beta_1X_1 + \\beta_2X_2 + \\epsilon \\] then to add an interaction between \\(X_1\\) and \\(X_2\\), we simply add a new multiplicative term. \\[ Y = \\beta_0 + \\beta_1X_1 + \\beta_2X_2 + \\beta_3(X_1\\times X_2) + \\epsilon \\] \\(\\beta_1\\) represents the relationship between \\(X_1\\) and \\(Y\\) when \\(X_2\\) is identically equal to 0. \\(\\beta_2\\) represents the relationship between \\(X_2\\) and \\(Y\\) when \\(X_1\\) is identically equal to 0. \\(\\beta_3\\) represents both: the change in the relationship between \\(X_1\\) and \\(Y\\) as \\(X_2\\) changes. the change in the relationship between \\(X_2\\) and \\(Y\\) as \\(X_1\\) changes. Adding these to the regress call is almost as easy. We’ll use # or ## instead. # includes only the interaction, whereas ## includes both the interaction and the main effects. a#b: Only the interaction (forcing \\(\\beta_1\\) and \\(\\beta_2\\) in the example above to be identically 0 - so rarely used). a##b: Main effect for a, main effect for b, and the interaction (most common way of specifying). a b a#b: Same as a##b a b a##b: Same as a##b, except it’ll be uglier because you’re including main effects twice and one will be ignored. . regress dollarel c.totsqft_en##i.regionc female Source | SS df MS Number of obs = 5,686 -------------+---------------------------------- F(8, 5677) = 216.96 Model | 889575170 8 111196896 Prob &gt; F = 0.0000 Residual | 2.9096e+09 5,677 512515.773 R-squared = 0.2342 -------------+---------------------------------- Adj R-squared = 0.2331 Total | 3.7991e+09 5,685 668272.157 Root MSE = 715.9 ------------------------------------------------------------------------------ dollarel | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] -------------+---------------------------------------------------------------- totsqft_en | .2256478 .019295 11.69 0.000 .1878222 .2634734 | regionc | Midwest | -179.3634 63.44754 -2.83 0.005 -303.7449 -54.98203 South | 192.7394 58.49142 3.30 0.001 78.07387 307.4049 West | -225.2264 60.58155 -3.72 0.000 -343.9894 -106.4634 | regionc#| c.totsqft_en | Midwest | -.015502 .0241206 -0.64 0.520 -.0627876 .0317836 South | .0644545 .0230569 2.80 0.005 .0192541 .1096549 West | .0464635 .0247323 1.88 0.060 -.0020214 .0949483 | female | -4.840345 19.18555 -0.25 0.801 -42.45134 32.77065 _cons | 910.6219 51.27115 17.76 0.000 810.1109 1011.133 ------------------------------------------------------------------------------ Note that we used c., similar to i.. c. forces Stata to treat it as continuous. Stata assumes anything in an interaction is categorical, so we need c. here! This can get pretty confusing, but it’s never wrong to include i. or c. when specifying a regression. Once we include an interaction, the relationship between the variables included in the interaction and the response are not constant - the relationship depends on the value of the other interacted variables. This can be hard to visualize with the basic regression output, so we’ll look at margins again instead. We’ll want to look at the relationship between square footage and expenditure in each region. . margins region, dydx(totsqft_en) Average marginal effects Number of obs = 5,686 Model VCE : OLS Expression : Linear prediction, predict() dy/dx w.r.t. : totsqft_en ------------------------------------------------------------------------------ | Delta-method | dy/dx Std. Err. t P&gt;|t| [95% Conf. Interval] -------------+---------------------------------------------------------------- totsqft_en | regionc | Northeast | .2256478 .019295 11.69 0.000 .1878222 .2634734 Midwest | .2101457 .0144893 14.50 0.000 .1817411 .2385503 South | .2901023 .0126292 22.97 0.000 .2653443 .3148603 West | .2721112 .0154829 17.57 0.000 .2417589 .3024636 ------------------------------------------------------------------------------ The dydx() option specifies that instead of marginal means (as we had above), we want to look at marginal slopes - that is, the slope between square footage and expenditure in each region. Recall that without the interaction the coefficient associated with square footage was approximately .25. Here we see that in the South and West that relationship is actually steeper, while in the Northeast and Midwest it’s shallower. The t-tests are testing whether the slope in each region is significantly different than zero. Note that the slope in Northeast in the margins call is identical to the main effect of square footage. The margins command is not telling us anything we could not have obtained or calculated from the regression output - it’s just doing so with minimal effort and maximal clarity. Let’s test whether the slopes differ between regions. . margins region, dydx(totsqft_en) pwcompare(pv) Pairwise comparisons of average marginal effects Model VCE : OLS Expression : Linear prediction, predict() dy/dx w.r.t. : totsqft_en -------------------------------------------------------------- | Contrast Delta-method Unadjusted | dy/dx Std. Err. t P&gt;|t| ----------------------+--------------------------------------- totsqft_en | regionc | Midwest vs Northeast | -.015502 .0241206 -0.64 0.520 South vs Northeast | .0644545 .0230569 2.80 0.005 West vs Northeast | .0464635 .0247323 1.88 0.060 South vs Midwest | .0799565 .0192133 4.16 0.000 West vs Midwest | .0619655 .0211922 2.92 0.003 West vs South | -.017991 .0199749 -0.90 0.368 -------------------------------------------------------------- It can sometimes be tricky to look at these tests and determine what it is telling us, but what this is basically saying is that Northeast and Midwest have the same slope, and South and West have the same slope. Then Northeast/Midwest is different than South/West. There’s a bit of confusion because West and Northeast are not statistically distinguishable (although .6 is extremely close to significance). This sort of thing happens often with multiple pairwise comparison, it’s best to try and focus on the overarching result instead of getting bogged down in details. We can call margins with slightly different options to be able to produce an interaction plot. Rather than using the dydx option, we’ll use the at option to estimate marginal means at specific values of square footage. . margins region, at(totsqft_en = (1000 8000)) Predictive margins Number of obs = 5,686 Model VCE : OLS Expression : Linear prediction, predict() 1._at : totsqft_en = 1000 2._at : totsqft_en = 8000 ------------------------------------------------------------------------------ | Delta-method | Margin Std. Err. t P&gt;|t| [95% Conf. Interval] -------------+---------------------------------------------------------------- _at#regionc | 1#Northeast | 1133.555 34.86327 32.51 0.000 1065.21 1201.9 1#Midwest | 938.6895 27.43586 34.21 0.000 884.9047 992.4743 1#South | 1390.749 20.60539 67.49 0.000 1350.354 1431.143 1#West | 954.792 22.54524 42.35 0.000 910.5948 998.9893 2#Northeast | 2713.089 114.0663 23.79 0.000 2489.476 2936.703 2#Midwest | 2409.71 84.60702 28.48 0.000 2243.848 2575.572 2#South | 3421.465 77.06117 44.40 0.000 3270.395 3572.534 2#West | 2859.571 96.7352 29.56 0.000 2669.933 3049.209 ------------------------------------------------------------------------------ Follow this with a call to marginsplot: . marginsplot Variables that uniquely identify margins: totsqft_en regionc There isn’t too much interesting here that we haven’t identified before. Often there is, and this plot will be useful. You can use the pwcompare(pv) option alongside the at() option to test for differences in region at specific values of square footage. 2.5.1 Centering Some sources suggest centering continuous predictors before including them in an interaction. This will change the coefficients in the regression output, but will not fit a different model. What may be useful is the main effects of terms involved in the interaction are now when the other variable is at it’s mean, rather than at 0. For example, in the model above with the interaction of square footage and region, the coefficients on region are the differences in region when square footage is 0 - not interesting. If we centered square footage, then the coefficients on region would be testing for differences when square footage is at it’s mean. However, once again, this is not fitting a different model. The results will be identical. I’d always recommend looking at the margins and interaction plot, even if you do center. 2.5.2 Fitting Separate Models A natural instinct when asking the question “does the relationship between X and Y differ by group” would be to fit separate models for each group. This is equivalent to interacting group with every predictor in the model. The downside of this approach is that each individual model is less powerful that fitting one overall model. The upside is that the interpretation may be a bit easier. If you go this approach, you can use the estimates store commands to save each model, then use lrtest to compare models (test whether all coefficients are equal between models) or use suest with test to test individual coefficients. See for example this UCLA page. 2.6 Robust standard errors The standard error associated with each coefficient are determined with the assumption that the model is “true” and that, were we given an infinite sample size, the estimates \\(\\hat{\\beta}\\) would converge to the true \\(\\beta\\). In many situations, this is clearly untrue. If you believe this is untrue, the estimates will be unaffected, but their standard errors will be incorrect. We can adjust for this by using “robust” standard errors, also known as Sandwich estimators or Huber-White estimators, with the vce(robust) option to regress. . regress dollarel c.totsqft_en##i.regionc female, vce(robust) Linear regression Number of obs = 5,686 F(8, 5677) = 159.38 Prob &gt; F = 0.0000 R-squared = 0.2342 Root MSE = 715.9 ------------------------------------------------------------------------------ | Robust dollarel | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] -------------+---------------------------------------------------------------- totsqft_en | .2256478 .0283384 7.96 0.000 .1700937 .2812019 | regionc | Midwest | -179.3634 67.18286 -2.67 0.008 -311.0675 -47.65938 South | 192.7394 70.31997 2.74 0.006 54.8854 330.5934 West | -225.2264 69.8558 -3.22 0.001 -362.1705 -88.28238 | regionc#| c.totsqft_en | Midwest | -.015502 .0317276 -0.49 0.625 -.0777002 .0466961 South | .0644545 .0347077 1.86 0.063 -.0035859 .1324949 West | .0464635 .0358506 1.30 0.195 -.0238174 .1167443 | female | -4.840345 19.27825 -0.25 0.802 -42.63308 32.95239 _cons | 910.6219 60.24297 15.12 0.000 792.5227 1028.721 ------------------------------------------------------------------------------ Notice that compared to the previous model, the Coef estimates are identical but the standard errors (and corresponding t-statistic, p-value and confidence interval) are slightly different. Typically, the robust standard errors will be larger than the non-robust standard errors, but not always. Generally, the only situation where the robust standard errors will decrease is when the error variance is highest for observations near the average value of the predictors. This does not often happen (generally the higher residuals occur in observations that could be considered outliers). There has been some argument that robust standard errors should always be used, because if the model is correctly specified, the robust standard errors and regular standard errors should be almost identical, so there is no harm in using them. 2.7 Assumptions There are three main assumptions when running a linear regression. Some we can test, some we cannot (and need to rely on our knowledge of the data). 2.7.1 Relationship is linear and additive Recall the linear regression model: \\[ Y = \\beta_0 + \\beta_1X_1 + \\beta_2X_2 + \\cdots + \\beta_pX_p + \\epsilon \\] This very explicitly assumes that the relationship is linear (as opposed to something non-linear, such as quadratic or exponential) and additive (as opposed to multiplicative). We can examine this assumption by looking at plots of the residuals (estimated errors): . rvfplot What we’re seeing here is a scatterplot between the fitted values (the predicted values for each individual) and their errors (the difference between the predicted values and observed values). If you can see a pattern in the scatterplot, that is evidence that this assumption is violated. Importantly, not seeing any pattern is not evidence that the assumption is valid! You’ll still need to cover this assumption with theory and knowledge of the data. This image, from Julian Faraway’s Linear Models with R book, demonstrates a lack of pattern (the first) and a pattern (the third). (We will discuss the second plot below). If this assumption is violated, you will need to reconsider the structure in your model, perhaps by adding a squared term (e.g. reg y c.x c.x#c.x) or in this case, trying a log transformation. 2.7.1.1 Obtaining predicted values and residuals In the rvfplot, we plotted residuals versus predicted values - neither of which we have in the data. If there is some analysis beyond what rvfplot produces that you’re interested in, the predict command can obtain these. The general syntax for predict is: predict &lt;new var name&gt;, &lt;statistic&gt; There are quite a few options for the “statistic”, but the two most commonly used ones are: xb: The linear prediction (also the default). This is the predicted value for each individual based on the model. residuals: The residuals. The difference between the predicted value and observed value. In other words, we can replicate the above rvfplot via: . predict linearpredictor, xb . predict resids, residuals . twoway scatter resids linearpredictor . 2.7.2 Errors are homogeneous “Homogeneity” is a fancy term for “uniform in distribution”, whereas “heterogeneity” represents “not uniform in distribution”. If we were to take a truly random sample of all individuals in Michigan, the distribution of their heights would be homogeneous - it is reasonable to assume there is only a single distribution at work there. If on the other hand, we took a random sample of basketball players and school children, this would definitely be heterogeneous. The basketball players have a markedly difference distribution of heights that school children! In linear regression, the homogeneity assumption is that the distribution of the errors is uniform. Violations would include errors changing as the predictor increased, or several groups having very different noise in their measurements. This is an assumption we can examine, again with the residuals vs fitted plot. We’re looking for either a blatant deviation from a mean of 0, or an increasing/decreasing variability on the y-axis over time. Refer back to the image above, looking at the middle plot. As the fitted values increase, the error spreads out. If this assumption is violated, you may consider restructuring your model as above, or transforming either your response or predictors using log transforms. 2.7.3 Independence The last assumption is that each row of your data is independent. If you have repeated measures, this is violated. If you have subjects drawn from groups (i.e. students in classrooms), this is violated. There is no way to test for this, it requires knowing the data set. This is, by far, the most important assumption. If this assumption is violated, some sort of repeated measures approach may be more appropriate such as mixed effects regression. 2.8 Variable Transformations Sometimes if one of the above assumptions is violated, it can be addressed by a simple variable transformation. The most common is taking the log of a right-skewed variable. . generate lgdollarel = log(dollarel) . histogram lgdollarel (bin=37, start=2.9295924, width=.16412662) . regress lgdollarel c.totsqft_en##i.regionc female, vce(robust) Linear regression Number of obs = 5,686 F(8, 5677) = 218.21 Prob &gt; F = 0.0000 R-squared = 0.2366 Root MSE = .53388 ------------------------------------------------------------------------------ | Robust lgdollarel | Coef. Std. Err. t P&gt;|t| [95% Conf. Interval] -------------+---------------------------------------------------------------- totsqft_en | .0001618 .0000195 8.28 0.000 .0001235 .0002001 | regionc | Midwest | -.167622 .0553156 -3.03 0.002 -.2760617 -.0591823 South | .2554224 .0523192 4.88 0.000 .1528567 .3579881 West | -.2625236 .0582447 -4.51 0.000 -.3767054 -.1483418 | regionc#| c.totsqft_en | Midwest | .0000181 .000022 0.82 0.411 -.000025 .0000612 South | 4.54e-06 .0000213 0.21 0.831 -.0000373 .0000464 West | .0000663 .0000254 2.61 0.009 .0000165 .0001162 | female | .0006914 .0143841 0.05 0.962 -.0275068 .0288897 _cons | 6.714953 .0484373 138.63 0.000 6.619998 6.809909 ------------------------------------------------------------------------------ We see a slight improvement to the model, though expenditure did not start out too skewed. Once we make this transformation, the interpretation of the coefficients change. By exponentiating the coefficients, we can determine the new interpretation. (Calling regress or any estimation command after running one replays the results without having to re-calculate them.) . regress, eform(&quot;Exp(Coef.)&quot;) Linear regression Number of obs = 5,686 F(8, 5677) = 218.21 Prob &gt; F = 0.0000 R-squared = 0.2366 Root MSE = .53388 ------------------------------------------------------------------------------ | Robust lgdollarel | Exp(Coef.) Std. Err. t P&gt;|t| [95% Conf. Interval] -------------+---------------------------------------------------------------- totsqft_en | 1.000162 .0000196 8.28 0.000 1.000124 1.0002 | regionc | Midwest | .8456734 .0467789 -3.03 0.002 .7587661 .9425349 South | 1.291007 .0675445 4.88 0.000 1.165158 1.430449 West | .7691082 .0447965 -4.51 0.000 .6861182 .8621364 | regionc#| c.totsqft_en | Midwest | 1.000018 .000022 0.82 0.411 .999975 1.000061 South | 1.000005 .0000213 0.21 0.831 .9999627 1.000046 West | 1.000066 .0000254 2.61 0.009 1.000016 1.000116 | female | 1.000692 .014394 0.05 0.962 .972868 1.029311 _cons | 824.6453 39.94362 138.63 0.000 749.9433 906.7883 ------------------------------------------------------------------------------ The string in quotes (“Exp(Coef.)”) is irrelevant and only for display purposes, eform is the important option. Now you can interpret each coefficient as the percent change in the outcome for a 1-unit increase in the predictor. For example, a coefficient of 1.15 would indicate that for a 1-unit increase in x, you predict an average increase of 15% in y. A coefficient of .89 would predict an average decrease of 11% in y. 2.9 Miscellaneous concerns 2.9.1 Multicollinearity Multicollinearity is an issue when 2 or more predictors are correlated. If only two are correlated, looking at their correlation (with pwcorr or correlate) may provide some indication, but you can have many-way multicollinearity where each pairwise correlation is low. You can use the variance inflation factor to try and identify if this is an issue. . estat vif Variable | VIF 1/VIF -------------+---------------------- totsqft_en | 6.79 0.147185 regionc | 2 | 7.99 0.125149 3 | 8.67 0.115281 4 | 8.09 0.123608 regionc#| c.totsqft_en | 2 | 9.00 0.111056 3 | 8.89 0.112494 4 | 7.23 0.138282 female | 1.01 0.994243 -------------+---------------------- Mean VIF | 7.21 The rule of thumb is VIF &gt; 10 or 1/VIF (called the tolerance) &lt; .1 suggests that the variable is involved in multicollinearity and more exploration may be needed. Multicollinearity can be an issue because the more correlated predictors are, the more likely that their combined effect will be inappropriately spread among them. For a very simple example, imagine that we have the model \\[ Y = \\beta_0 + \\beta_1X_1 + \\beta_2X_2 + \\epsilon \\] If \\(X_1\\) and \\(X_2\\) are uncorrelated, then we can estimate \\(\\beta_1\\) and \\(\\beta_2\\) without a problem. Consider the extreme situations where \\(X_1\\) and \\(X_2\\) are perfectly correlated.8 We can therefore rewrite the equation as \\[ Y = \\beta_0 + (\\beta_1 + \\beta_2)X_1 + \\epsilon \\] since with perfect correlation, \\(X_1\\) and \\(X_2\\) are identical.9 Now, when we fit the model, we would have estimates of \\(\\beta_1\\) and \\(\\beta_2\\) which sum to the “truth”, but the individual level of each of \\(\\beta_1\\) and \\(\\beta_2\\) could be anything. For example, if the “true” \\(\\beta_1\\) and \\(\\beta_2\\) are 1 and 3, they sum to 4. We could get estimated coefficients of 1 and 3, or 3 and 1, or -20 and 24! This is an extreme example, but in practice we can be close to this situation. 2.9.2 Overfitting Overfitting occurs when a model includes so many predictors that you can no longer generalize to the population. The rule of thumb is that you should have no more than one predictor for every 10-20 observations. The smaller your sample size, the more conservative you should be. For example, a sample size of 100 should use no more than 10-20 predictors. Recall that a categorical predictor with \\(k\\) different levels adds \\(k-1\\) predictors! 2.9.3 Model Selection is bad There is a literature on the idea of model selection, that is, an automated (or sometimes manual) way of testing many versions of a model with a different subset of the predictors in an attempt to find the model that fits best. These are sometimes called “stepwise” procedures. This method has a number of flaws, including Doing this is basically “p-value mining”, that is, running a lot of tests till you find a p-value you like. Your likelihood of making a false positive is very high. As we saw earlier, adding a new variable can have an effect on existing predictors. Instead of doing model selection, you should use your knowledge of the data to select a subset of the variables which are either a) of importance to you, b) theoretically influential on the outcome (e.g. demographic variables) or c) what others (reviewers) would think are influential on the outcome. Then you can fit a single model including all of this. The “subset” can be all predictors if the sample size is sufficient. Note that adjustments to fix assumptions (e.g. transformations) or multicollinearity would not fall into the category of model selection and are fine to use. There are variations of regression with multiple outcomes, but they are for very specialized circumstances and can generally be fit as several basic regression models instead.↩ This is based a database of cars from 1978, and with some pretty harsh rounding of the coefficients, for demonstration purposes.↩ https://www.eia.gov/consumption/residential/about.php↩ There likely was, but the RECS does data imputation for you.↩ The 2 and 5683 are degrees of freedom. They don’t typically add any interpretation.↩ The only exception is if the predictor being added is either constant or identical to another variable, in which case Stata would drop the variable before fitting the model anyways..↩ You could use tab regionc, generate(region) to create it.↩ Note that if you provide data with perfect correlation, Stata will drop one of them for you. This in only a thought exercise. If it helps, imagine their correlation is 99% instead of perfect, and add “almost” as a qualifier to most claims.↩ Technically there could be a scaling factors such that \\(X_1 = aX_2 + b\\), but let’s assume without loss of generality that \\(a=1\\) and \\(b=0\\).↩ "],
["generalized-linear-models.html", "Chapter 3 Generalized Linear Models 3.1 Logistic Regression 3.2 Poisson regression 3.3 Other regression models", " Chapter 3 Generalized Linear Models If the outcome variable is not continuous, while OLS will usually be able to be fit, the results may be unexpected or undesired. For example, if the response is a binary indicator, an OLS model fit may predict an individual has a negative response. We can generalize the model from ordinary least squares to allow a non-linear relationship between the predictors and the outcome, which may fit different outcomes better. Recall that the equation for OLS is \\[ Y = \\beta_0 + \\beta_1X_1 + \\beta_2X_2 + \\cdots + \\beta_pX_p + \\epsilon \\] We can modify this by allowing the left hand side to be a function of \\(Y\\), \\[ f(Y) = \\beta_0 + \\beta_1X_1 + \\beta_2X_2 + \\cdots + \\beta_pX_p + \\epsilon \\] Note that this is still linear in \\(X\\) (the right-hand side). Non-linear regession refers to something such as \\[ Y = \\beta_1X_1^{\\beta_2X_2} + \\epsilon \\] Therefore, even though the function \\(f()\\) may not be linear, the model is still linear - hence “generalized linear model”. The function, \\(f()\\), is called the “link” function. If the link function is the identify function, \\(f(x) = x\\), the GLM simplifies to ordinary least squares. We’ll talk about a few link functions and the regression models they define. 3.1 Logistic Regression Logistic regression is used when the outcome is dichotomous - either a positive outcome (1) or a negative outcome (0). For example, presence or absence of some disease. The link function for logistic regression is logit, \\[ \\textrm{logit}(x) = \\textrm{log}\\Big(\\frac{x}{1-x}\\Big) \\] \\[ \\textrm{logit}\\left(P(Y = 1 | X)\\right) = \\beta_0 + \\beta_1X_1 + \\cdots + \\beta_pX_p + \\epsilon. \\] Note also that unlike in OLS, the left-hand side is not the observed outcome, but rather the probability of a positive outcome. So the goal of a logistic model is not to predict whether an individual will have a positive outcome, but rather to predict their probability of a positive outcome. This is a subtle difference, but worth pointing out since predicted values will be probabilities, not a binary response. 3.1.1 Fitting the logistic model We can fit a logistic regression using the logit command in State. It works very similarly to regress. Let’s run a model predicting the presence of a cellar based on square footage, region and electricity expenditure. . tab cellar CELLAR | Freq. Percent Cum. ------------+----------------------------------- -2 | 1,455 25.59 25.59 0 | 2,490 43.79 69.38 1 | 1,741 30.62 100.00 ------------+----------------------------------- Total | 5,686 100.00 . replace cellar = . if cellar == -2 (1,455 real changes made, 1,455 to missing) . logit cellar dollarel totsqft_en i.regionc female Iteration 0: log likelihood = -2866.0585 Iteration 1: log likelihood = -1748 Iteration 2: log likelihood = -1730.0798 Iteration 3: log likelihood = -1729.9962 Iteration 4: log likelihood = -1729.9962 Logistic regression Number of obs = 4,231 LR chi2(6) = 2272.12 Prob &gt; chi2 = 0.0000 Log likelihood = -1729.9962 Pseudo R2 = 0.3964 ------------------------------------------------------------------------------ cellar | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- dollarel | -.0004174 .0000575 -7.26 0.000 -.0005301 -.0003048 totsqft_en | .0009164 .0000417 21.98 0.000 .0008347 .0009981 | regionc | Midwest | -.3488001 .1461488 -2.39 0.017 -.6352464 -.0623538 South | -3.188248 .1435758 -22.21 0.000 -3.469651 -2.906844 West | -3.11719 .1482945 -21.02 0.000 -3.407842 -2.826538 | female | -.1458111 .0864176 -1.69 0.092 -.3151864 .0235642 _cons | .0504946 .1659137 0.30 0.761 -.2746904 .3756795 ------------------------------------------------------------------------------ When you try this yourself, you may notice that its not quite as fast as regress. That is because for OLS we have a “closed form solution” - we just do some quick math and reach an answer. However, almost every other type of regression lacks a closed form solution, so instead we solve it iteratively - Stata guesses at the best coefficients that minimize error10, and uses an algorithm to repeatedly improve those coefficients until the reduction in error is below some threshold. From this output, we get the “Number of obs” again. Instead of an ANOVA table with a F-statistic to test model significance, there is instead a “chi2” (\\(\\chi^2\\), pronounced “ky-squared” as in “Kyle”). In this model, we reject the null that all coefficients are identically 0. When we move away from linear regression, we no longer get an \\(R^2\\) measure. There have been various pseudo-\\(R^2\\)’s suggested, and Stata reports one here, but be careful assigning too much meaning to it. It is not uncommon to get pseudo-\\(R^2\\) values that are negative or above 1. We’ll discuss measuring goodness of fit below. The coefficients table is interpreted in almost the same way as with regression. We see that square footage and energy expenditure have significant coefficient (positive and negative respectively), and there appears to be no gender effect. There are differences between regions. However, we cannot nicely interpret these coefficients, which are known as the “log odds”. All we can say is that “As square footage increases, the probability of a house having a cellar increases.” To add any interpretability to these coefficients, we should instead look at the odds ratios. These are the exponentiated log odds. We can ask Stata to produce these with the or option. . logit, or Logistic regression Number of obs = 4,231 LR chi2(6) = 2272.12 Prob &gt; chi2 = 0.0000 Log likelihood = -1729.9962 Pseudo R2 = 0.3964 ------------------------------------------------------------------------------ cellar | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- dollarel | .9995826 .0000575 -7.26 0.000 .99947 .9996953 totsqft_en | 1.000917 .0000417 21.98 0.000 1.000835 1.000999 | regionc | Midwest | .7055342 .1031129 -2.39 0.017 .5298049 .9395504 South | .0412441 .0059217 -22.21 0.000 .0311279 .0546479 West | .0442814 .0065667 -21.02 0.000 .0331126 .0592175 | female | .864321 .0746925 -1.69 0.092 .7296529 1.023844 _cons | 1.051791 .1745066 0.30 0.761 .7598073 1.45598 ------------------------------------------------------------------------------ Note: _cons estimates baseline odds. Notice that the “chi2”, “PseudoR2”, “z” and “P&gt;|z|” do not change - we’re fitting the same model! We’re just changing how the coefficients are represented. Odds ratios null hypothesis is at 1, not at 0. A value of 1 represents equal odds (or no change in odds). Odds ratios are always positive. So a significant odds ratio will be away from 1, rather than away from 0 as in linear regression or the log odds. The interpretation of odds ratios can be tricky, so let’s be precise here. For categorical predictors, the interpretation is fairly straightforward. The coefficient on females is 0.8643. This means that for every 1 female respondent who has a basement in their house, you would expect 0.8643 male respondents to have a basement. For continuous predictors, its the odds as the value of the predictor changes. Consider the coefficient on energy expenditure, 0.999583. For every 1 house of expenditure \\(e\\) which has a cellar, you’d expect 0.999583 houses at expenditure \\(e+1\\) to have a cellar. Those coefficients are really close to 1 due to scaling: a $1 increase or 1-sqft increase is irrelevant. Due to the non-linear relationship between the predictors and the outcome, we cannot simply multiply the odds ratios. Instead, let’s scale the variables and re-fit the model. . generate dollarel1000 = dollarel/1000 . generate totsqft1000 = totsqft_en/1000 . logit cellar dollarel1000 totsqft1000 i.regionc female, or Iteration 0: log likelihood = -2866.0585 Iteration 1: log likelihood = -1748 Iteration 2: log likelihood = -1730.0798 Iteration 3: log likelihood = -1729.9962 Iteration 4: log likelihood = -1729.9962 Logistic regression Number of obs = 4,231 LR chi2(6) = 2272.12 Prob &gt; chi2 = 0.0000 Log likelihood = -1729.9962 Pseudo R2 = 0.3964 ------------------------------------------------------------------------------ cellar | Odds Ratio Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- dollarel1000 | .6587254 .0378633 -7.26 0.000 .5885423 .7372778 totsqft1000 | 2.500286 .1042513 21.98 0.000 2.304083 2.713196 | regionc | Midwest | .7055342 .1031129 -2.39 0.017 .5298049 .9395504 South | .0412441 .0059217 -22.21 0.000 .0311279 .0546479 West | .0442814 .0065667 -21.02 0.000 .0331126 .0592175 | female | .864321 .0746925 -1.69 0.092 .7296529 1.023844 _cons | 1.051791 .1745066 0.30 0.761 .7598073 1.45598 ------------------------------------------------------------------------------ Note: _cons estimates baseline odds. Note once again that the model fit characteristics haven’t changed; we’ve fit the same model, just with different units. Now the interpretation are more reasonable. As the expenditure increases by $1000, the odds of having a cellar decrease by 34%. For every additional 1000-square feet, the odds of having a cellar increases by 150%. In other words, for every two 2000-square foot house that have a cellar, you’d expect five 3000-square foot houses to have cellars. 3.1.2 Categorical Variables and Interactions Both categorical variables and interactions can be included as they were in linear regression, with the appropriate interpretation of coefficients/odds ratios. 3.1.3 margins and predict The margins command works mostly the same, though it produces results on the probability scale, not the odds scale. . margins regionc Predictive margins Number of obs = 4,231 Model VCE : OIM Expression : Pr(cellar), predict() ------------------------------------------------------------------------------ | Delta-method | Margin Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- regionc | Northeast | .7852513 .0181353 43.30 0.000 .7497068 .8207958 Midwest | .7288181 .0144762 50.35 0.000 .7004453 .7571909 South | .2087012 .0102263 20.41 0.000 .1886581 .2287443 West | .218189 .0113706 19.19 0.000 .195903 .240475 ------------------------------------------------------------------------------ The predict command adds a new statistic. xb now is the linear predictor, which is often not useful. Instead, the pr statistic returns the estimated probability of a positive outcome. 3.1.4 Logistic regression assumptions The assumptions for logistic regression are simpler than linear. The outcome measure must be binary with a 0 for a negative response and 1 for a positive. (Technically they don’t have to be positive/negative. We could think of predicting male/female and code male = 0 and female = 1. However, the convention would be to consider the outcome as “The person is female” so a 1 represents a “success” and a 0 a “failure” of that statement.) The errors in a logistic regression model are fairly contained (you can’t be wrong than more than 1!) so there are no real assumptions about them. The independence assumption is still here and still important, again, a mixed logistic model may be appropriate if the data is not independent. 3.1.5 Logistic goodness of fit As we mentioned earlier, there are various issues with the Pseudo \\(R^2\\) reported by logit, so use it carefully. In fact, all measures of goodness of fit in non-OLS models are problematic. However, here are two approaches commonly used in logistic regression. The first is to look at a classification results: If we were to choose a threshold (say .2) and classify positive/negative outcomes against it (If a predicted probability is below .2, classify as 0. If a predicted probability is above .2, classify as 1.). We don’t know what the “correct” threshold is (if you even believe there could be one), but we can test over a range of thresholds and see how well we classify. . lroc Logistic model for cellar number of observations = 4231 area under ROC curve = 0.8928 This is called a ROC curve (Receiver Operating Characteristic). Starting with a threshold of 1 (so no houses are predicted to have a cellar) at (0,0) and continuing to a threshold of 0 (all houses are predicted to have a cellar), each point is plotted as sensitivity (percent of correctly predicted positive responses) versus specificity (incorrecly predicted negative responses). With a threshold of 1, every house with a cellar is predicted to not a cellar (so 0% correct) and every house without a cellar is predicted to have a cellar (0% correct). As the threshold increases, these values are computed and plotted. The diagonal \\(y=x\\) line represents a completely uninformative model, and the ROC curve cannot pass below it. The closer it is to the top left corner, the better predictive the model is. The AUC (area under curve) is another measure of model-fit: .5 would indicate no information (ROC on the diagonal), 1 would indicate perfect fit (ROC to the top left corner). The AUC here is 0.89 indicating some predictive power. The second is a more formal test. There are two variants, a Pearson \\(\\chi^2\\) test and the Hosmer-Lemeshow test. Both are fit with the estat gof command. Both are testing the hypothesis that the observed positive responses match predicted positive responses in subgroups of the population. Therefore we do not want to reject these tests, and a large p-value is desired. . estat gof Logistic model for cellar, goodness-of-fit test ----------------------------------------------- number of observations = 4231 number of covariate patterns = 4231 Pearson chi2(4224) = 4070.48 Prob &gt; chi2 = 0.9539 We see here a p-value of 0.954, failing to reject the null, so there is no evidence that the model fits poorly. There is some concern that when the “number of covariate patterns” is close to the number of observations , the Pearson test is invalid. In this data, we see that 4231 is indeed equal to 4231. Instead, we can use the Hosmer-Lemeshow by passing the group(#) option: . estat gof, group(10) Logistic model for cellar, goodness-of-fit test ----------------------------------------------- (Table collapsed on quantiles of estimated probabilities) number of observations = 4231 number of groups = 10 Hosmer-Lemeshow chi2(8) = 58.12 Prob &gt; chi2 = 0.0000 The p-value gets very significant. Why did we choose 10 groups? It’s just the standard. The only thing to keep in mind is that the Hosmer-Lemeshow test is only appropriate if the number of groups is greater than the number of predictors (including the intercept). In this model, we had two predictors, so that’s 3 total (including the intercept), so 10 is OK. There is some discussion that this choice can bias results - there are examples out there where passing 9 to the option rejects the test, whereas passing 11 passes. Overall, as mentioned, take these goodness-of-fit measures with a grain of salt. Focus on interpreting the coefficients. 3.1.6 Separation Since the logistic regression model is solved iteratively, this can fail for a number of reasons. Before you begin interpreting the model, you’ll want to glance at the iteration steps and make sure that no errors were printed. The most common failure is due to separation. With a binary outcome instead of a continuous outcome, it is much easier to have a predictor (or set of predictors) that perfectly predict the outcome. Consider trying to predict gender based on height. With a smaller sample, it’s not hard to imagine a scenario where every male is taller than every female. This is called “perfect separation”; using this sample, knowing height gives perfect information about gender “Partial separation” can also occur; this is when prediction is perfect only for one limit. Take the height scenario again; say everyone above 5’8\" is male, and there are two men but the rest women below 5’8“. Here, we will always predict Male for heights above 5’8”. Separation (of either type) often produces coefficients to be extreme with large standard errors. Stata will sometimes warn about this, but not always. If you notice these exceptional coefficients or if Stata does warn about separation, you’ll need to investigate and consider excluding certain predictors. It may seem counter-intuitive to exclude extremely highly predictive variables, but if a variable produces perfect separation, you don’t need a model to inform you of that. 3.1.7 logit Miscellaneous. The logit model supports the margins command just like regress does. It does not support estat vif, but you can re-run the model as with regress as the VIF does not depend on the outcome. E.g., logit y a b c regress y a b c estat vif Collinearity, overfitting, and model selection remain concerns in the logistic model. Robust standard errors via vce(robust) are supported. One other common cause of failed convergence is scaling - try scaling all your variables and see if that improves convergence. 3.1.8 logit vs logistic Instead of logit, we could run the logistic command. The only difference is that logistic reports the odds ratio by default whereas logit reports the log odds. My personal preference is logit, but there’s no need to use one over the other. 3.1.9 Sample size concerns When the percent of positive outcomes is close to 50%, the rules we discussed for OLS hold, 10-20 observations per predictor. As the percent of positive outcomes deviates from 50%, you may need a much larger sample size - mostly to ensure a reasonable number of both positive and negative outcomes. For example, if you expect 5% of individuals to have a positive outcome, and have a sample size of 40, that’s only 2 individuals with a positive outcome! Instead you should strive to have at least 10 or ideally over 100 individuals per outcome. 3.1.10 Rare outcomes If the percent of positive outcomes is extreme (e.g. 99% or 1%), logistic regression may fail to converge. Sometimes Poisson regression which we’ll talk about next can be used in this situation. The estimated coefficients will be slightly biased, but convergence may easier to achieve. 3.2 Poisson regression When the response variable is a count (number of occurences), then using a log link function produces what’s known as Poisson regression. 3.2.1 Fitting the model As with logistic regression, the Poisson regression command is simple and similar to regress. Let’s predict the number of rooms in a house based upon the variables we’ve been dealing with so far. . histogram totrooms (bin=37, start=1, width=.48648649) . poisson totrooms dollarel1000 totsqft1000 i.cellar i.regionc female Iteration 0: log likelihood = -8755.2204 Iteration 1: log likelihood = -8755.2185 Iteration 2: log likelihood = -8755.2185 Poisson regression Number of obs = 4,231 LR chi2(7) = 986.09 Prob &gt; chi2 = 0.0000 Log likelihood = -8755.2185 Pseudo R2 = 0.0533 ------------------------------------------------------------------------------ totrooms | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- dollarel1000 | .0576783 .007261 7.94 0.000 .043447 .0719096 totsqft1000 | .1124977 .0049483 22.73 0.000 .1027992 .1221962 1.cellar | .0609588 .0159101 3.83 0.000 .0297756 .0921421 | regionc | Midwest | .0242295 .019944 1.21 0.224 -.01486 .0633189 South | .0369115 .0211105 1.75 0.080 -.0044642 .0782873 West | .0705931 .0218298 3.23 0.001 .0278075 .1133788 | female | -.0206701 .0117413 -1.76 0.078 -.0436825 .0023424 _cons | 1.50274 .0244648 61.42 0.000 1.45479 1.55069 ------------------------------------------------------------------------------ We see the same sort of header information, including a Chi2 test for model significance and another pseudo \\(R^2\\). The coefficients are again not interpretable other than sign and magnitude, but we can report incidence-rate ratios (IRR) instead. The irr option produces these, which are just the exponetiated coefficients. . poisson, irr Poisson regression Number of obs = 4,231 LR chi2(7) = 986.09 Prob &gt; chi2 = 0.0000 Log likelihood = -8755.2185 Pseudo R2 = 0.0533 ------------------------------------------------------------------------------ totrooms | IRR Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- dollarel1000 | 1.059374 .0076921 7.94 0.000 1.044405 1.074558 totsqft1000 | 1.11907 .0055375 22.73 0.000 1.108269 1.129976 1.cellar | 1.062855 .0169102 3.83 0.000 1.030223 1.096521 | regionc | Midwest | 1.024525 .0204331 1.21 0.224 .9852499 1.065367 South | 1.037601 .0219042 1.75 0.080 .9955457 1.081433 West | 1.073145 .0234265 3.23 0.001 1.028198 1.120056 | female | .9795421 .0115011 -1.76 0.078 .9572578 1.002345 _cons | 4.493985 .1099446 61.42 0.000 4.283582 4.714722 ------------------------------------------------------------------------------ Note: _cons estimates baseline incidence rate. IRR’s are slightly easier to interpret than OR’s. Each represents a average percent change in the count of the outcome predicted when there is a 1 increase in the predictor variable. For example, the IRR for square footage is 1.119 which translates to a 11.9% predicted average increase in the number of rooms in a house which increases in sample size by 1,000 square feet. 3.2.2 Interactions, categorical variables, margins, predict Interactions and categorical variables work the same. margins estimates the marginal means, which are the expected number of counts. predict by default predicts the number of events. 3.2.3 Assumptions Poisson regression has the same independence assumption. It also has a very strong assumption which is specific to the Poisson distribution - namely that the mean and variance of a Poisson random variable are equal. In other words, as the mean of a Poisson variable increases, it becomes more spread out in a linear fashion. We can examine whether this may be true for a given variable. . summarize totrooms Variable | Obs Mean Std. Dev. Min Max -------------+--------------------------------------------------------- totrooms | 5,686 6.191347 2.360918 1 19 Here the mean, 6.19 is very close to the variance, 2.36\\(^2\\) = 5.57. This is not always the case for count data. If this is not true, a Negative Binomial model may be more appropriate. It’s extremely similar to Poisson, except it allows the mean and variance to be decoupled by means of \\(\\alpha\\), called the overdispersion factor. We can fit it with the nbreg command. . nbreg totrooms dollarel1000 totsqft1000 i.cellar i.regionc female Fitting Poisson model: Iteration 0: log likelihood = -8755.2204 Iteration 1: log likelihood = -8755.2185 Iteration 2: log likelihood = -8755.2185 Fitting constant-only model: Iteration 0: log likelihood = -12716.439 Iteration 1: log likelihood = -9248.2645 Iteration 2: log likelihood = -9248.2645 Fitting full model: Iteration 0: log likelihood = -8758.8756 Iteration 1: log likelihood = -8755.2187 Iteration 2: log likelihood = -8755.2185 Negative binomial regression Number of obs = 4,231 LR chi2(7) = 986.09 Dispersion = mean Prob &gt; chi2 = 0.0000 Log likelihood = -8755.2185 Pseudo R2 = 0.0533 ------------------------------------------------------------------------------ totrooms | Coef. Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- dollarel1000 | .0576783 .007261 7.94 0.000 .043447 .0719096 totsqft1000 | .1124977 .0049483 22.73 0.000 .1027992 .1221962 1.cellar | .0609588 .0159101 3.83 0.000 .0297756 .0921421 | regionc | Midwest | .0242295 .019944 1.21 0.224 -.01486 .0633189 South | .0369115 .0211105 1.75 0.080 -.0044642 .0782873 West | .0705931 .0218298 3.23 0.001 .0278075 .1133788 | female | -.0206701 .0117413 -1.76 0.078 -.0436825 .0023424 _cons | 1.50274 .0244648 61.42 0.000 1.45479 1.55069 -------------+---------------------------------------------------------------- /lnalpha | -27.77865 . . . -------------+---------------------------------------------------------------- alpha | 8.63e-13 . . . ------------------------------------------------------------------------------ LR test of alpha=0: chibar2(01) = 0.00 Prob &gt;= chibar2 = 1.000 The row for alpha is the estimate of the overdispersion factor. If this value is close to 0, the Poisson model is appropriate. That’s what is occcurring here - in fact it’s so close to 0 that Stata refuses to even compute a standard error for it. The likelihood ratio test below it is formally testing whether the Poisson model is appropriate; here the p-value of 1.0 let’s us stick with Poisson. If this rejected, the negative binomial model is more appropriate. The negative binomial model is interpreted in the same fashion as Poisson. 3.2.4 Exposure Sometimes the count is limited by the exposure - for example, if you are counting the number of students in a class who fail an exam, this number will likely be higher for classes with more students. We can adjust for this in the Poisson model by specifying the exposure(___) option. In the energy data, let’s say instead of the total number of rooms, we want to predict the number of bedrooms. Obviously the total number of rooms in the house will greatly affect the number of bedrooms. . histogram bedrooms (bin=37, start=0, width=.27027027) . poisson bedrooms dollarel1000 totsqft1000 i.cellar i.regionc female, exposure &gt; (totrooms) irr Iteration 0: log likelihood = -6697.7375 Iteration 1: log likelihood = -6697.7375 Poisson regression Number of obs = 4,231 LR chi2(7) = 29.36 Prob &gt; chi2 = 0.0001 Log likelihood = -6697.7375 Pseudo R2 = 0.0022 ------------------------------------------------------------------------------ bedrooms | IRR Std. Err. z P&gt;|z| [95% Conf. Interval] -------------+---------------------------------------------------------------- dollarel1000 | 1.00444 .0110315 0.40 0.687 .98305 1.026296 totsqft1000 | .9736346 .0074929 -3.47 0.001 .959059 .9884317 1.cellar | .9749456 .0229176 -1.08 0.280 .931047 1.020914 | regionc | Midwest | .9819498 .0292231 -0.61 0.540 .926312 1.040929 South | .9932802 .0310743 -0.22 0.829 .9342054 1.056091 West | 1.023995 .0329379 0.74 0.461 .9614307 1.09063 | female | 1.000022 .017315 0.00 0.999 .9666552 1.034542 _cons | .4965649 .0181979 -19.10 0.000 .4621485 .5335443 ln(totrooms) | 1 (exposure) ------------------------------------------------------------------------------ Note: _cons estimates baseline incidence rate. We interpret this exactly as before. Negative binomial models can likewise have exposure(___) set. 3.3 Other regression models There are two extensions to logistic regression, ordinal logistic and multinomial logistic. Ordinal logistic is used when there are more than 2 outcome categories, and they are ordered (e.g. not sick (0), mildly sick (1), very sick (2)). Using ologit, Stata estimates an underlying continuous distribution and returns the “cut points”, allowing categorization. If there are multiple groups but not ordered, e.g. race, use mlogit for multinomial logistic regression. It essentially fits a model predicting membership in each group versus all other, with some restrictions across the models. Technically that maximizes likelihood, but that distinction is not important for understanding.↩ "]
]
